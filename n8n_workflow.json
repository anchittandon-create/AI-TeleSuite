
{
  "name": "Clone AI_TeleSuite Full App",
  "nodes": [
    {
      "parameters": {},
      "id": "713674d8-7c41-4c17-81a6-89602e4726d4",
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        -260,
        300
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "readme_md",
              "value": "# Firebase Studio\n\nThis is a NextJS starter in Firebase Studio.\n\nTo get started, take a look at src/app/page.tsx.\n\nThe core features for Audio Transcription and AI Call Scoring have now reached a stable state (v1.0). You can refer to the `PROJECT_DESCRIPTION.md` file for more details on the application's features and versioning. This state is now considered the baseline for future development.\n\nTo replicate this application from scratch, please refer to the detailed instructions in [src/REPLICATION_PROMPT.md](./src/REPLICATION_PROMPT.md)."
            },
            {
              "name": "replication_prompt_md",
              "value": "You are a top-tier AI coding agent. Your task is to build a complete, production-ready web application from scratch based on the detailed technical specifications below. The application is an \"AI_TeleSuite\" designed to empower telesales and support teams. Adhere strictly to the versions, libraries, folder structures, and logic flows described.\n\n---\n\n### **Version: v1.1 - Resilient Voice Agents & UX Polish**\n\nThis document describes the v1.1 state of the application. Key improvements over v1.0 include: a resilient, client-side TTS implementation, more robust AI flows with fallbacks, hardened voice agent logic for reliable turn-taking and barge-in, and significant UI/UX enhancements across all features.\n\n---\n\n### **1. Core Technology Stack**\n\n*   **Framework:** Next.js (v15.x or latest stable) using the App Router.\n*   **Language:** TypeScript.\n*   **UI Library:** React (v18.x) with ShadCN UI components. All components are pre-built and available under `@/components/ui`.\n*   **Styling:** Tailwind CSS. The specific theme and colors are defined in `src/app/globals.css`.\n*   **AI Backend & Orchestration:** Genkit (v1.x) using `@genkit-ai/googleai`. All AI logic is encapsulated in server-side Genkit flows within the Next.js application.\n*   **AI Models:** Google's Gemini models, specifically `gemini-2.0-flash` for most tasks and `gemini-1.5-flash-latest` for more complex reasoning or larger context windows.\n*   **Client-Side State Management:** React Hooks (`useState`, `useEffect`, `useMemo`, `useCallback`). Custom hooks are used for managing `localStorage`.\n*   **Text-to-Speech (TTS):** A **client-side utility** (`/src/lib/tts-client.ts`) that directly calls the Google Cloud Text-to-Speech REST API. The API key must be exposed to the client as `NEXT_PUBLIC_GOOGLE_API_KEY`.\n*   **Speech-to-Text (ASR):** Browser's native `window.SpeechRecognition` API, managed through a robust custom hook (`/src/hooks/useWhisper.ts`).\n\n---\n\n### **2. Core Project Files & Configuration**\n\n*   **`package.json`**:\n    ```json\n    {\n      \"name\": \"ai-telesuite-replication\",\n      \"version\": \"0.1.1\",\n      \"private\": true,\n      \"scripts\": {\n        \"dev\": \"next dev\",\n        \"build\": \"next build\",\n        \"start\": \"NODE_ENV=production next start -p 9003\",\n        \"lint\": \"next lint\",\n        \"typecheck\": \"tsc --noEmit\"\n      },\n      \"dependencies\": {\n        \"@hookform/resolvers\": \"^4.1.3\",\n        \"@radix-ui/react-accordion\": \"^1.2.3\",\n        \"@radix-ui/react-alert-dialog\": \"^1.1.6\",\n        \"@radix-ui/react-avatar\": \"^1.1.3\",\n        \"@radix-ui/react-checkbox\": \"^1.1.4\",\n        \"@radix-ui/react-dialog\": \"^1.1.6\",\n        \"@radix-ui/react-dropdown-menu\": \"^2.1.6\",\n        \"@radix-ui/react-label\": \"^2.1.2\",\n        \"@radix-ui/react-menubar\": \"^1.1.6\",\n        \"@radix-ui/react-popover\": \"^1.1.6\",\n        \"@radix-ui/react-progress\": \"^1.1.2\",\n        \"@radix-ui/react-radio-group\": \"^1.2.3\",\n        \"@radix-ui/react-scroll-area\": \"^1.2.3\",\n        \"@radix-ui/react-select\": \"^2.1.6\",\n        \"@radix-ui/react-separator\": \"^1.1.2\",\n        \"@radix-ui/react-slider\": \"^1.2.3\",\n        \"@radix-ui/react-slot\": \"^1.1.2\",\n        \"@radix-ui/react-switch\": \"^1.1.3\",\n        \"@radix-ui/react-tabs\": \"^1.1.3\",\n        \"@radix-ui/react-toast\": \"^1.2.6\",\n        \"@radix-ui/react-tooltip\": \"^1.1.8\",\n        \"@tanstack/react-query\": \"^5.66.0\",\n        \"class-variance-authority\": \"^0.7.1\",\n        \"clsx\": \"^2.1.1\",\n        \"cmdk\": \"^1.0.0\",\n        \"date-fns\": \"^3.6.0\",\n        \"docx-preview\": \"^0.3.2\",\n        \"geist\": \"^1.3.0\",\n        \"jspdf\": \"^2.5.1\",\n        \"jspdf-autotable\": \"^3.8.0\",\n        \"jszip\": \"^3.10.1\",\n        \"lucide-react\": \"^0.475.0\",\n        \"next\": \"15.2.3\",\n        \"react\": \"^18.3.1\",\n        \"react-day-picker\": \"^8.10.1\",\n        \"react-dom\": \"^18.3.1\",\n        \"react-hook-form\": \"^7.54.2\",\n        \"recharts\": \"^2.15.1\",\n        \"tailwind-merge\": \"^3.0.1\",\n        \"tailwindcss-animate\": \"^1.0.7\",\n        \"xlsx\": \"^0.18.5\",\n        \"zod\": \"^3.24.2\",\n        \"genkit\": \"^1.0.0\",\n        \"@genkit-ai/googleai\": \"^1.0.0\",\n        \"@genkit-ai/next\": \"^1.0.0\",\n        \"genkit-cli\": \"^1.0.0\",\n        \"wav\": \"^1.0.2\"\n      },\n      \"devDependencies\": {\n        \"@types/node\": \"^20\",\n        \"@types/react\": \"^18\",\n        \"@types/react-dom\": \"^18\",\n        \"postcss\": \"^8\",\n        \"raw-loader\": \"^4.0.2\",\n        \"tailwindcss\": \"^3.4.1\",\n        \"typescript\": \"^5\"\n      }\n    }\n    ```\n\n*   **`tailwind.config.ts`**: Standard configuration for a ShadCN UI project.\n\n*   **`src/app/globals.css`**: Defines the application's color scheme using CSS variables.\n    ```css\n    @tailwind base;\n    @tailwind components;\n    @tailwind utilities;\n\n    body {\n      font-family: var(--font-geist-sans), Arial, Helvetica, sans-serif;\n    }\n\n    @layer base {\n      :root {\n        --background: 192 67% 94%;\n        --foreground: 200 10% 25%;\n        --card: 0 0% 100%;\n        --card-foreground: 200 10% 25%;\n        --popover: 0 0% 100%;\n        --popover-foreground: 200 10% 25%;\n        --primary: 197 74% 52%;\n        --primary-foreground: 0 0% 100%;\n        --secondary: 192 50% 88%;\n        --secondary-foreground: 200 10% 20%;\n        --muted: 192 40% 80%;\n        --muted-foreground: 200 10% 40%;\n        --accent: 36 100% 63%;\n        --accent-foreground: 24 95% 15%;\n        --destructive: 0 84.2% 60.2%;\n        --destructive-foreground: 0 0% 98%;\n        --border: 192 30% 75%;\n        --input: 0 0% 100%;\n        --input-border: 192 30% 70%;\n        --ring: 197 74% 52%;\n        --radius: 0.5rem;\n        --sidebar-background: 200 20% 96%;\n        --sidebar-foreground: 200 10% 25%;\n        --sidebar-primary: 197 74% 52%;\n        --sidebar-primary-foreground: 0 0% 100%;\n        --sidebar-accent: 36 100% 63%;\n        --sidebar-accent-foreground: 24 95% 15%;\n        --sidebar-border: 200 15% 88%;\n        --sidebar-ring: 197 74% 52%;\n      }\n    }\n    ```\n\n*   **Environment Variables (`.env`)**: Requires a Google API key. The key must be duplicated and prefixed with `NEXT_PUBLIC_` for client-side TTS access.\n    ```\n    GOOGLE_API_KEY=your_google_cloud_api_key_with_gemini_enabled\n    NEXT_PUBLIC_GOOGLE_API_KEY=your_google_cloud_api_key_with_gemini_enabled\n    ```\n\n---\n\n### **3. Folder & File Structure**\n\nCreate the following directory structure and files:\n\n```\n/\n├── public/\n├── src/\n│   ├── ai/\n│   │   ├── flows/\n│   │   │   ├── call-scoring.ts\n│   │   │   ├── combined-call-scoring-analysis.ts\n│   │   │   ├── data-analyzer.ts\n│   │   │   ├── generate-full-call-audio.ts\n│   │   │   ├── pitch-generator.ts\n│   │   │   ├── product-description-generator.ts\n│   │   │   ├── rebuttal-generator.ts\n│   │   │   ├── training-deck-generator.ts\n│   │   │   ├── transcription-flow.ts\n│   │   │   ├── voice-sales-agent-flow.ts\n│   │   │   └── voice-support-agent-flow.ts\n│   │   ├── dev.ts\n│   │   └── genkit.ts\n│   ├── app/\n│   │   ├── (main)/\n│   │   │   ├── activity-dashboard/page.tsx\n│   │   │   ├── batch-audio-downloader/page.tsx\n│   │   │   ├── call-scoring/page.tsx\n│   │   │   ├── call-scoring-dashboard/page.tsx\n│   │   │   ├── clone-app/page.tsx\n│   │   │   ├── combined-call-analysis/page.tsx\n│   │   │   ├── combined-call-analysis-dashboard/page.tsx\n│   │   │   ├── create-training-deck/page.tsx\n│   │   │   ├── data-analysis/page.tsx\n│   │   │   ├── data-analysis-dashboard/page.tsx\n│   │   │   ├── home/page.tsx\n│   │   │   ├── knowledge-base/page.tsx\n│   │   │   ├── pitch-generator/page.tsx\n│   │   │   ├── products/page.tsx\n│   │   │   ├── rebuttal-generator/page.tsx\n│   │   │   ├── training-material-dashboard/page.tsx\n│   │   │   ├── transcription/page.tsx\n│   │   │   ├── transcription-dashboard/page.tsx\n│   │   │   ├── voice-sales-agent/page.tsx\n│   │   │   ├── voice-sales-dashboard/page.tsx\n│   │   │   ├── voice-support-agent/page.tsx\n│   │   │   └── voice-support-dashboard/page.tsx\n│   │   │   └── layout.tsx\n│   │   ├── login/page.tsx\n│   │   ├── api/clone-app/route.ts\n│   │   ├── globals.css\n│   │   ├── layout.tsx\n│   │   └── page.tsx\n│   ├── components/\n│   │   ├── common/loading-spinner.tsx\n│   │   ├── features/\n│   │   │   ├── activity-dashboard/\n│   │   │   ├── call-scoring/\n│   │   │   ├── call-scoring-dashboard/\n│   │   │   ├── combined-call-analysis/\n│   │   │   ├── data-analysis/\n│   │   │   ├── data-analysis-dashboard/\n│   │   │   ├── knowledge-base/\n│   │   │   ├── pitch-generator/\n│   │   │   ├── products/\n│   │   │   ├── rebuttal-generator/\n│   │   │   ├── training-material-dashboard/\n│   │   │   ├── transcription/\n│   │   │   └── voice-agents/\n│   │   ├── icons/logo.tsx\n│   │   └── layout/\n│   │   └── ui/ (Standard ShadCN components)\n│   ├── hooks/\n│   │   ├── use-activity-logger.ts\n│   │   ├── use-knowledge-base.ts\n│   │   ├── use-local-storage.ts\n│   │   ├── use-mobile.ts\n│   │   ├── use-product-context.tsx\n│   │   ├── use-toast.ts\n│   │   ├── use-user-profile.ts\n│   │   ├── use-voice-samples.ts\n│   │   └── use-whisper.ts\n│   ├── lib/\n│   │   ├── export.ts\n│   │   ├── file-utils.ts\n│   │   ├── pdf-utils.ts\n│   │   ├── tts-client.ts\n│   │   └── utils.ts\n│   ├── styles/transcript.css\n│   └── types/index.ts\n├── REPLICATION_PROMPT.md\n├── next.config.js\n├── package.json\n└── tsconfig.json\n```\n\n---\n\n### **4. UI Design & Layout Structure**\n\n*   **Main Layout (`src/app/(main)/layout.tsx`)**: The core layout for the authenticated app. It includes the `<AppSidebar>` on the left and renders page content within a `<SidebarInset>` component. A page loading overlay is displayed during navigation.\n*   **Sidebar (`src/components/layout/app-sidebar.tsx`)**: A collapsible sidebar with accordion-style navigation groups. It's defined by a static `navStructure` array. It shows the current user profile. The navigation structure MUST place each dashboard link directly *after* its corresponding feature link.\n*   **Page Header (`src/components/layout/page-header.tsx`)**: A sticky header displaying the page title and a hamburger menu trigger on mobile.\n*   **Component-Based Design**: Each feature has its own folder in `src/components/features/`. These folders contain the main form, results display components (`PitchCard`, `CallScoringResultsCard`), and dashboard-specific tables.\n\n---\n\n### **5. Feature Implementation & Backend Logic**\n\nThe application uses server actions to call Genkit flows located in `src/ai/flows/`.\n\n**5.1. Core Hooks (State Management)**\n\n*   **`useLocalStorage`**: Generic hook to persist state to `localStorage`.\n*   **`useUserProfile`**: Manages the current user's profile name (hardcoded to \"Anchit\").\n*   **`useProductContext`**: Manages the list of products (`ET`, `TOI`, `General`, plus user-added ones) in `localStorage`.\n*   **`useKnowledgeBase`**: Manages a `localStorage`-based knowledge base of files and text entries.\n*   **`useActivityLogger`**: Logs every significant user action to `localStorage`.\n*   **`useWhisper`**: A hardened hook that manages the `SpeechRecognition` API. It handles start/stop logic and provides callbacks for both interim (`onTranscribe`) and final (`onTranscriptionComplete`) results. It includes robust timers for silence and inactivity detection.\n\n**5.2. AI Flows (`src/ai/flows/*.ts`)**\n\n*   **`genkit.ts`**: Initializes the global `ai` instance with the `googleAI()` plugin.\n*   **`transcription-flow.ts`**:\n    *   **Function**: `transcribeAudio`\n    *   **Logic**: Uses a dual-model, resilient strategy. It first attempts transcription with `gemini-2.0-flash`. If that fails, it retries with the more powerful `gemini-1.5-flash-latest`. The prompt is simplified for reliability and instructs the AI to include time allotments (`[0 seconds - 15 seconds]`).\n*   **`call-scoring.ts`**:\n    *   **Function**: `scoreCall`\n    *   **Input**: `transcriptOverride` (required), `product`, `agentName?`, `audioDataUri` (optional for tonality), `productContext`, `brandUrl`.\n    *   **Logic**: This flow now *only* scores a provided transcript. It uses `gemini-1.5-flash-latest` with a detailed, 75-metric rubric. The prompt explicitly expects time allotments in the transcript. If the primary model fails, it falls back to `gemini-2.0-flash` with a simpler rubric to ensure a result is always returned.\n*   **`combined-call-scoring-analysis.ts`**:\n    *   **Function**: `analyzeCallBatch` - Synthesizes multiple `ScoreCallOutput` objects into a single aggregated report using `gemini-1.5-flash-latest`.\n    *   **Function**: `generateOptimizedPitches` - Takes the output of the combined analysis and uses it as `optimizationContext` to call the `generatePitch` flow for multiple cohorts, creating data-driven pitches.\n*   **`pitch-generator.ts`**:\n    *   **Function**: `generatePitch`\n    *   **Logic**: Uses `gemini-1.5-flash-latest`. The prompt is now more resilient: if the `knowledgeBaseContext` is insufficient, it is explicitly authorized to supplement its knowledge by browsing the provided `brandUrl`. It also correctly handles the optional `optimizationContext` to refine the pitch based on past call performance.\n*   **`rebuttal-generator.ts`**:\n    *   **Function**: `generateRebuttal`\n    *   **Logic**: Uses `gemini-1.5-flash-latest` with a prompt instructing it to follow the \"Acknowledge, Bridge, Benefit, Clarify/Question\" structure. If the KB is insufficient, it can browse the `brandUrl`. It also has a non-AI, rule-based fallback (`generateFallbackRebuttal`) for maximum reliability.\n*   **`training-deck-generator.ts`**:\n    *   **Function**: `generateTrainingDeck`\n    *   **Logic**: A flexible content generator that uses `gemini-2.0-flash`. It has special-case frameworks for \"ET Prime Sales Deck\" and \"Telesales Data Analysis Framework\" and a general case for all other requests.\n*   **`data-analyzer.ts`**:\n    *   **Function**: `analyzeData`\n    *   **Logic**: Simulates data analysis using `gemini-2.0-flash`. The AI acts as an analyst, simulating data cleaning and KPI calculation based *only* on the user's detailed text description. The output includes a disclaimer about the simulation.\n*   **`voice-sales-agent-flow.ts`**:\n    *   **Function**: `runVoiceSalesAgentTurn`\n    *   **Logic**: The orchestrator for the voice sales agent.\n        1.  On `START_CONVERSATION`, it first calls `generatePitch` to get the full script.\n        2.  On `PROCESS_USER_RESPONSE`, it uses a fast \"router\" prompt (`conversationRouterPrompt`) to decide the next action (continue pitch, answer question, handle objection).\n        3.  It then calls specialized, smaller prompts (`salesAnswerGeneratorPrompt`, `supportAnswerGeneratorPrompt`, `objectionHandlerPrompt`) to get a quick, KB-grounded response. This modular approach ensures speed and relevance.\n*   **`voice-support-agent-flow.ts`**:\n    *   **Function**: `runVoiceSupportAgentQuery`\n    *   **Logic**: Uses `gemini-1.5-flash-latest` to answer a user's query based on the `knowledgeBaseContext`. The prompt instructs the AI to identify if a query requires live data or is unanswerable from the KB and to suggest escalation.\n\n**5.3. Frontend Page Logic (`src/app/(main)/**/*.tsx`)**\n\n*   **General Pattern**: Each feature page is a client component (`\"use client\"`). It handles `onSubmit` events, calls the relevant server action (Genkit flow), manages `isLoading` states, and passes results to display components.\n*   **`call-scoring/page.tsx`**: The frontend is now responsible for the two-step process. It first calls `transcribeAudio`. On success, it then calls `scoreCall`, passing the resulting transcript in the `transcriptOverride` field. This ensures resilience.\n*   **`voice-sales-agent/page.tsx` & `voice-support-agent/page.tsx`**: These pages are complex state machines.\n    *   They use the `useWhisper` hook for ASR, configured for low latency.\n    *   **Barge-in:** Is implemented in the `onTranscribe` callback, which immediately stops any ongoing TTS audio playback when user speech is detected.\n    *   **Inactivity:** A `setTimeout` is used to detect when the user hasn't spoken after the agent finishes, triggering a reminder turn.\n    *   They call the `synthesizeSpeechOnClient` utility for all TTS needs.\n    *   On call end, they now correctly `await` the `scoreCall` function before saving the final activity log, ensuring the score is always included. A `<PostCallReview>` component is used to display all final artifacts.\n*   **`combined-call-analysis/page.tsx`**: Redesigned for a cleaner UX. It uses a `ReportSelectionTable` component with checkboxes to allow users to easily select which historical reports to include in the analysis.\n*   **Dashboards**: All dashboard pages are client components that read data from `localStorage` via the `useActivityLogger` hook and provide filtering and \"View Details\" functionality in a `Dialog`.\n\nThis detailed prompt provides all necessary information for any competent AI coding agent to replicate the AI_TeleSuite application with a high degree of fidelity.\n"
            }
          ]
        },
        "options": {},
        "id": "11d51624-9549-411a-a10c-15a0c3a50d24",
        "name": "Project Files Data",
        "type": "n8n-nodes-base.set",
        "typeVersion": 2,
        "position": [
          -540,
          300
        ]
      },
      {
        "parameters": {
          "values": {
            "string": [
              {
                "name": "package_json",
                "value": "{\n  \"name\": \"nextn\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"dev\": \"next dev\",\n    \"build\": \"next build\",\n    \"start\": \"NODE_ENV=production next start -p 9003\",\n    \"lint\": \"next lint\",\n    \"typecheck\": \"tsc --noEmit\"\n  },\n  \"dependencies\": {\n    \"@hookform/resolvers\": \"^4.1.3\",\n    \"@radix-ui/react-accordion\": \"^1.2.3\",\n    \"@radix-ui/react-alert-dialog\": \"^1.1.6\",\n    \"@radix-ui/react-avatar\": \"^1.1.3\",\n    \"@radix-ui/react-checkbox\": \"^1.1.4\",\n    \"@radix-ui/react-dialog\": \"^1.1.6\",\n    \"@radix-ui/react-dropdown-menu\": \"^2.1.6\",\n    \"@radix-ui/react-label\": \"^2.1.2\",\n    \"@radix-ui/react-menubar\": \"^1.1.6\",\n    \"@radix-ui/react-popover\": \"^1.1.6\",\n    \"@radix-ui/react-progress\": \"^1.1.2\",\n    \"@radix-ui/react-radio-group\": \"^1.2.3\",\n    \"@radix-ui/react-scroll-area\": \"^1.2.3\",\n    \"@radix-ui/react-select\": \"^2.1.6\",\n    \"@radix-ui/react-separator\": \"^1.1.2\",\n    \"@radix-ui/react-slider\": \"^1.2.3\",\n    \"@radix-ui/react-slot\": \"^1.1.2\",\n    \"@radix-ui/react-switch\": \"^1.1.3\",\n    \"@radix-ui/react-tabs\": \"^1.1.3\",\n    \"@radix-ui/react-toast\": \"^1.2.6\",\n    \"@radix-ui/react-tooltip\": \"^1.1.8\",\n    \"@tanstack-query-firebase/react\": \"^1.0.5\",\n    \"@tanstack/react-query\": \"^5.66.0\",\n    \"class-variance-authority\": \"^0.7.1\",\n    \"clsx\": \"^2.1.1\",\n    \"cmdk\": \"^1.0.0\",\n    \"date-fns\": \"^3.6.0\",\n    \"docx-preview\": \"^0.3.2\",\n    \"firebase\": \"^11.7.3\",\n    \"geist\": \"^1.3.0\",\n    \"html2canvas\": \"^1.4.1\",\n    \"jspdf\": \"^2.5.1\",\n    \"jspdf-autotable\": \"^3.8.0\",\n    \"jszip\": \"^3.10.1\",\n    \"lucide-react\": \"^0.475.0\",\n    \"next\": \"15.2.3\",\n    \"patch-package\": \"^8.0.0\",\n    \"react\": \"^18.3.1\",\n    \"react-day-picker\": \"^8.10.1\",\n    \"react-dom\": \"^18.3.1\",\n    \"react-hook-form\": \"^7.54.2\",\n    \"recharts\": \"^2.15.1\",\n    \"tailwind-merge\": \"^3.0.1\",\n    \"tailwindcss-animate\": \"^1.0.7\",\n    \"xlsx\": \"^0.18.5\",\n    \"zod\": \"^3.24.2\",\n    \"genkit\": \"^1.0.0\",\n    \"@genkit-ai/googleai\": \"^1.0.0\",\n    \"@genkit-ai/next\": \"^1.0.0\",\n    \"genkit-cli\": \"^1.0.0\",\n    \"wav\": \"^1.0.2\"\n  },\n  \"devDependencies\": {\n    \"@types/js-base64\": \"^3.3.1\",\n    \"@types/jszip\": \"^3.4.1\",\n    \"@types/node\": \"^20\",\n    \"@types/react\": \"^18\",\n    \"@types/react-dom\": \"^18\",\n    \"@types/xlsx\": \"^0.0.36\",\n    \"@types/wav\": \"^1.0.4\",\n    \"postcss\": \"^8\",\n    \"raw-loader\": \"^4.0.2\",\n    \"tailwindcss\": \"^3.4.1\",\n    \"typescript\": \"^5\"\n  }\n}"
            }
          ]
        },
        "options": {},
        "id": "a90a2a5d-4f32-475c-8975-257850ceb12b",
        "name": "package.json",
        "type": "n8n-nodes-base.set",
        "typeVersion": 2,
        "position": [
          -260,
          560
        ]
      },
      {
        "parameters": {
          "values": {
            "string": [
              {
                "name": "next_config_js",
                "value": "/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  typescript: {\n    ignoreBuildErrors: true,\n  },\n  eslint: {\n    ignoreDuringBuilds: true,\n  },\n  images: {\n    remotePatterns: [\n      {\n        protocol: 'https',\n        hostname: 'placehold.co',\n        port: '',\n        pathname: '/**',\n      },\n    ],\n  },\n  experimental: {\n    serverActions: {\n      bodySizeLimit: '150mb', // Increase body size limit to safely handle 100MB files after Base64 encoding\n    },\n  },\n  // For Vercel deployments, the maxDuration can be configured in vercel.json,\n  // or by exporting 'maxDuration' from the page itself.\n  // The value below is for documentation. We export the constant from the page files.\n  // maxDuration: 300,\n};\n\nmodule.exports = nextConfig;\n"
              }
            ]
          }
        },
        "id": "e9196d47-66c5-4a57-b003-888910006de7",
        "name": "next.config.js",
        "type": "n8n-nodes-base.set",
        "typeVersion": 2,
        "position": [
          -260,
          820
        ]
      },
      {
        "parameters": {
          "values": {
            "string": [
              {
                "name": "tsconfig_json",
                "value": "{\n  \"compilerOptions\": {\n    \"target\": \"ES2017\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"allowJs\": true,\n    \"skipLibCheck\": true,\n    \"strict\": true,\n    \"noEmit\": true,\n    \"esModuleInterop\": true,\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"bundler\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"jsx\": \"preserve\",\n    \"incremental\": true,\n    \"plugins\": [\n      {\n        \"name\": \"next\"\n      }\n    ],\n    \"paths\": {\n      \"@/*\": [\"./src/*\"]\n    }\n  },\n  \"include\": [\"next-env.d.ts\", \"**/*.ts\", \"**/*.tsx\", \".next/types/**/*.ts\"],\n  \"exclude\": [\"node_modules\"]\n}\n"
              }
            ]
          }
        },
        "id": "b304c405-2b4a-4464-a621-0a6ef2f7b88e",
        "name": "tsconfig.json",
        "type": "n8n-nodes-base.set",
        "typeVersion": 2,
        "position": [
          -260,
          1080
        ]
      },
      {
        "parameters": {
          "values": {
            "string": [
              {
                "name": "env",
                "value": "# THIS IS AN EXAMPLE, REPLACE WITH YOUR REAL GOOGLE API KEY\n# Ensure the key has Gemini API and Text-to-Speech API enabled.\nGOOGLE_API_KEY=YOUR_GOOGLE_API_KEY_HERE\nNEXT_PUBLIC_GOOGLE_API_KEY=YOUR_GOOGLE_API_KEY_HERE"
              }
            ]
          }
        },
        "id": "c1f10738-f10d-45f8-b391-456959b8b093",
        "name": ".env",
        "type": "n8n-nodes-base.set",
        "typeVersion": 2,
        "position": [
          -260,
          1340
        ]
      },
      {
        "parameters": {
          "values": {
            "string": [
              {
                "name": "globals_css",
                "value": "@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\nbody {\n  font-family: var(--font-geist-sans), Arial, Helvetica, sans-serif;\n}\n\n@layer base {\n  :root {\n    --background: 192 67% 94%; /* Light Blue (#E5F5F9) */\n    --foreground: 200 10% 25%; /* Darker gray for readability */\n    --card: 0 0% 100%;\n    --card-foreground: 200 10% 25%;\n    --popover: 0 0% 100%;\n    --popover-foreground: 200 10% 25%;\n    --primary: 197 74% 52%; /* Vibrant Blue (#29ABE2) */\n    --primary-foreground: 0 0% 100%; /* White */\n    --secondary: 192 50% 88%; /* Lighter shade of background for secondary elements */\n    --secondary-foreground: 200 10% 20%;\n    --muted: 192 40% 80%;\n    --muted-foreground: 200 10% 40%;\n    --accent: 36 100% 63%; /* Warm Orange (#FFB347) */\n    --accent-foreground: 24 95% 15%; /* Dark brown/black for readability on orange */\n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 0 0% 98%;\n    --border: 192 30% 75%; /* Slightly darker border for definition */\n    --input: 0 0% 100%; /* White input background */\n    --input-border: 192 30% 70%; /* Border for inputs */\n    --ring: 197 74% 52%; /* Primary color for rings */\n    --chart-1: 12 76% 61%;\n    --chart-2: 173 58% 39%;\n    --chart-3: 197 37% 24%;\n    --chart-4: 43 74% 66%;\n    --chart-5: 27 87% 67%;\n    --radius: 0.5rem;\n\n    /* Sidebar specific vars, aligning with the main theme */\n    --sidebar-background: 200 20% 96%; /* Slightly off-white/light-gray for sidebar */\n    --sidebar-foreground: 200 10% 25%;\n    --sidebar-primary: 197 74% 52%; /* Use main primary */\n    --sidebar-primary-foreground: 0 0% 100%;\n    --sidebar-accent: 36 100% 63%; /* Use main accent */\n    --sidebar-accent-foreground: 24 95% 15%;\n    --sidebar-border: 200 15% 88%;\n    --sidebar-ring: 197 74% 52%;\n  }\n  .dark {\n    /* Keeping dark mode variables as a fallback, though the app is light-themed */\n    --background: 200 10% 10%;\n    --foreground: 192 67% 94%;\n    --card: 200 10% 10%;\n    --card-foreground: 192 67% 94%;\n    --popover: 200 10% 10%;\n    --popover-foreground: 192 67% 94%;\n    --primary: 197 74% 52%;\n    --primary-foreground: 0 0% 100%;\n    --secondary: 200 10% 15%;\n    --secondary-foreground: 192 67% 94%;\n    --muted: 200 10% 15%;\n    --muted-foreground: 192 50% 70%;\n    --accent: 36 100% 63%;\n    --accent-foreground: 24 95% 15%;\n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 0 0% 98%;\n    --border: 200 10% 20%;\n    --input: 200 10% 15%;\n    --input-border: 200 10% 25%;\n    --ring: 197 74% 52%;\n    --chart-1: 220 70% 50%;\n    --chart-2: 160 60% 45%;\n    --chart-3: 30 80% 55%;\n    --chart-4: 280 65% 60%;\n    --chart-5: 340 75% 55%;\n    \n    --sidebar-background: 200 10% 12%;\n    --sidebar-foreground: 192 67% 94%;\n    --sidebar-primary: 197 74% 52%;\n    --sidebar-primary-foreground: 0 0% 100%;\n    --sidebar-accent: 36 100% 63%;\n    --sidebar-accent-foreground: 24 95% 15%;\n    --sidebar-border: 200 10% 20%;\n    --sidebar-ring: 197 74% 52%;\n  }\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  body {\n    @apply bg-background text-foreground;\n  }\n  /* Custom scrollbar for webkit browsers */\n  ::-webkit-scrollbar {\n    width: 8px;\n    height: 8px;\n  }\n  ::-webkit-scrollbar-track {\n    @apply bg-muted/50;\n    border-radius: 10px;\n  }\n  ::-webkit-scrollbar-thumb {\n    @apply bg-primary/50;\n    border-radius: 10px;\n  }\n  ::-webkit-scrollbar-thumb:hover {\n    @apply bg-primary/70;\n  }\n}\n"
              }
            ]
          }
        },
        "id": "e6a2185c-4384-482a-a957-c81bc6b82582",
        "name": "globals.css",
        "type": "n8n-nodes-base.set",
        "typeVersion": 2,
        "position": [
          -260,
          1600
        ]
      },
      {
        "parameters": {
          "values": {
            "string": [
              {
                "name": "key_json",
                "value": "{\n  \"type\": \"service_account\",\n  \"project_id\": \"pitchperfect-ai-s0jx8\",\n  \"private_key_id\": \"fa4d1e45514c06ec90d65fa9137e08502bd46905\",\n  \"private_key\": \"-----BEGIN PRIVATE KEY-----\\nMIIEVQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCkk/FqsCXTQF54\\nzn6UT33EomTcxjLtrxWYh+UmD0omvaJ+rn9zsthhJruBCYtSZDSq52+hHd3sGX3D\\n7z80bbQMzWSx2h0vm52bR2ddWRxzV2ETWA1Kv4yC1r5v8x8xPvE4X+DG0ts5NCDw\\nivgXK5pKcmGyncFG9EnFqcZewt+004eeeb2qUGbq0xsc2+5gvxHoeK\\n8RpzWZmXs2pMg/7PeAvblcCjVAGRBShAw38ydzdVF8X0VL11GBHxepofh2hiFAnu\\nHgvlLG5rAgMBAAECggEAAXcdvaTu2Ugn7yxrfRe0F5uYiUysdGhMdIRw0YlSujS2\\nzfOLmGPUnBPxPuhr5bkriyB8bIG2SUURpNd9acMJs6dRlHZ8fU\\nJSnb9ByUf9iHuWy8xo/a4tb2ZiUVLWp5af7Z0MlizsW4pQPd3u4tDGt0KNS6ecC2\\nu0tdr/FT6WxNC79tPgYcSrqvPW0owIlZ4rlBlcwN0elCtNJRz9E\\nSz9tVBETG4gcaBqfnGx016sHKuYHlV2I4w4yrss8yXY0zZTrecd0HdJLPbsUk3wf\\nqrDgVZbMsxriWGtFLsKFRJjKjwKBgQDJrrdXKM2K7Gm1eYs3ZYCPHxSJICCAg3Wo\\nNsvkMlYxVU9y+pLwumGj1i9g8ddK6b590AdrPPLvxQEnVf2Bw03n\\nkgxLtWU8ZQKBgH03se0MU4nZfWVBxICrIvMvhTs36rmJ2bwlCT2wJ83N0VtWK74r\\nDrZfcc0CZ3D+1Tqec4eZls0epoGN/ObIw/68taSe+JunEgHmuHUJelJYGSJiGBeq0n\\nrUPdZHyJqGxEEGgSP7TAoGBAJ7b\\njLQNgqELiFQWEY8n1zRkccN018UCRxmxPFNBBFBVDFVXnmoBWRIjkZDpvC/qcJYE\\n9Hz/W0d0JbBnOtz3lsL7AKAVxXYi/wr7BMixF4sLvVc109NDLdsb7EGPl1AgLqpj\\nGdyNgVwTcyUcR8uzLV005D18pbqfYYTGAAL2NXB1AoGAd3xPPwDK2WgHD7YD5z1M\\nt0iIZjtj8tCsGmJu3t0VjshfqIWrAF38iMWTjzZfg6vxkofvHDQNdxn3fCNaKTIw\\n70+e0f\\ndkAE0dl6B4grj8odxlA+rAs=\\n-----END PRIVATE KEY-----\\n\",\n  \"client_email\": \"ai-telesuitefinal@pitchperfect-ai-s0jx8.iam.gserviceaccount.com\",\n  \"client_id\": \"109156462036092362629\",\n  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n  \"token_uri\": \"https://oauth2.googleapis.com/token\",\n  \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n  \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/ai-telesuitefinal%40pitchperfect-ai-s0jx8.iam.gserviceaccount.com\",\n  \"universe_domain\": \"googleapis.com\"\n}"
              }
            ]
          }
        },
        "id": "e45a201c-6d91-460d-a369-0efd128d5757",
        "name": "key.json",
        "type": "n8n-nodes-base.set",
        "typeVersion": 2,
        "position": [
          -260,
          1860
        ]
      },
      {
        "parameters": {
          "operation": "toJson",
          "options": {}
        },
        "id": "8bb56d2a-4318-4903-a3b0-6421528659d5",
        "name": "Aggregated JSON",
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          240,
          300
        ]
      }
    ],
    "connections": {
      "Start": {
        "main": [
          [
            {
              "node": "Project Files Data",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Project Files Data": {
        "main": [
          [
            {
              "node": "package.json",
              "type": "main",
              "index": 0
            },
            {
              "node": "next.config.js",
              "type": "main",
              "index": 0
            },
            {
              "node": "tsconfig.json",
              "type": "main",
              "index": 0
            },
            {
              "node": ".env",
              "type": "main",
              "index": 0
            },
            {
              "node": "globals.css",
              "type": "main",
              "index": 0
            },
            {
              "node": "key.json",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "package.json": {
        "main": [
          [
            {
              "node": "Aggregated JSON",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "next.config.js": {
        "main": [
          [
            {
              "node": "Aggregated JSON",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "tsconfig.json": {
        "main": [
          [
            {
              "node": "Aggregated JSON",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      ".env": {
        "main": [
          [
            {
              "node": "Aggregated JSON",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "globals.css": {
        "main": [
          [
            {
              "node": "Aggregated JSON",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "key.json": {
        "main": [
          [
            {
              "node": "Aggregated JSON",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    }
  },
  "pinData": {}
}
