{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/activity-dashboard",
      "regex": "^/activity\\-dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/activity\\-dashboard(?:/)?$"
    },
    {
      "page": "/batch-audio-downloader",
      "regex": "^/batch\\-audio\\-downloader(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/batch\\-audio\\-downloader(?:/)?$"
    },
    {
      "page": "/call-scoring",
      "regex": "^/call\\-scoring(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/call\\-scoring(?:/)?$"
    },
    {
      "page": "/call-scoring-dashboard",
      "regex": "^/call\\-scoring\\-dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/call\\-scoring\\-dashboard(?:/)?$"
    },
    {
      "page": "/clone-app",
      "regex": "^/clone\\-app(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/clone\\-app(?:/)?$"
    },
    {
      "page": "/combined-call-analysis",
      "regex": "^/combined\\-call\\-analysis(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/combined\\-call\\-analysis(?:/)?$"
    },
    {
      "page": "/combined-call-analysis-dashboard",
      "regex": "^/combined\\-call\\-analysis\\-dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/combined\\-call\\-analysis\\-dashboard(?:/)?$"
    },
    {
      "page": "/create-training-deck",
      "regex": "^/create\\-training\\-deck(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/create\\-training\\-deck(?:/)?$"
    },
    {
      "page": "/data-analysis",
      "regex": "^/data\\-analysis(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/data\\-analysis(?:/)?$"
    },
    {
      "page": "/data-analysis-dashboard",
      "regex": "^/data\\-analysis\\-dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/data\\-analysis\\-dashboard(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/home",
      "regex": "^/home(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/home(?:/)?$"
    },
    {
      "page": "/knowledge-base",
      "regex": "^/knowledge\\-base(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/knowledge\\-base(?:/)?$"
    },
    {
      "page": "/knowledge-base-dashboard",
      "regex": "^/knowledge\\-base\\-dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/knowledge\\-base\\-dashboard(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/n8n-workflow",
      "regex": "^/n8n\\-workflow(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/n8n\\-workflow(?:/)?$"
    },
    {
      "page": "/pitch-generator",
      "regex": "^/pitch\\-generator(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/pitch\\-generator(?:/)?$"
    },
    {
      "page": "/products",
      "regex": "^/products(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/products(?:/)?$"
    },
    {
      "page": "/rebuttal-generator",
      "regex": "^/rebuttal\\-generator(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/rebuttal\\-generator(?:/)?$"
    },
    {
      "page": "/replication-generator",
      "regex": "^/replication\\-generator(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/replication\\-generator(?:/)?$"
    },
    {
      "page": "/sales-tools/pitch-generator",
      "regex": "^/sales\\-tools/pitch\\-generator(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/sales\\-tools/pitch\\-generator(?:/)?$"
    },
    {
      "page": "/sales-tools/rebuttal-assistant",
      "regex": "^/sales\\-tools/rebuttal\\-assistant(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/sales\\-tools/rebuttal\\-assistant(?:/)?$"
    },
    {
      "page": "/training-material-dashboard",
      "regex": "^/training\\-material\\-dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/training\\-material\\-dashboard(?:/)?$"
    },
    {
      "page": "/transcription",
      "regex": "^/transcription(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/transcription(?:/)?$"
    },
    {
      "page": "/transcription-dashboard",
      "regex": "^/transcription\\-dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/transcription\\-dashboard(?:/)?$"
    },
    {
      "page": "/voice-sales-agent",
      "regex": "^/voice\\-sales\\-agent(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/voice\\-sales\\-agent(?:/)?$"
    },
    {
      "page": "/voice-sales-dashboard",
      "regex": "^/voice\\-sales\\-dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/voice\\-sales\\-dashboard(?:/)?$"
    },
    {
      "page": "/voice-support-agent",
      "regex": "^/voice\\-support\\-agent(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/voice\\-support\\-agent(?:/)?$"
    },
    {
      "page": "/voice-support-dashboard",
      "regex": "^/voice\\-support\\-dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/voice\\-support\\-dashboard(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}