(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8298],{5225:(e,t,a)=>{"use strict";a.d(t,{A:()=>n});let n=(0,a(14294).A)("FileText",[["path",{d:"M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z",key:"1rqfz7"}],["path",{d:"M14 2v4a2 2 0 0 0 2 2h4",key:"tnqrlb"}],["path",{d:"M10 9H8",key:"b1mrlr"}],["path",{d:"M16 13H8",key:"t4e002"}],["path",{d:"M16 17H8",key:"z1uh3a"}]])},5418:(e,t,a)=>{"use strict";a.d(t,{A:()=>n});let n=(0,a(14294).A)("Bot",[["path",{d:"M12 8V4H8",key:"hb8ula"}],["rect",{width:"16",height:"12",x:"4",y:"8",rx:"2",key:"enze0r"}],["path",{d:"M2 14h2",key:"vft8re"}],["path",{d:"M20 14h2",key:"4cs60a"}],["path",{d:"M15 13v2",key:"1xurst"}],["path",{d:"M9 13v2",key:"rq6x2g"}]])},15894:(e,t,a)=>{"use strict";a.d(t,{dj:()=>p});var n=a(12115);let s=0,o=new Map,i=e=>{if(o.has(e))return;let t=setTimeout(()=>{o.delete(e),c({type:"REMOVE_TOAST",toastId:e})},1e6);o.set(e,t)},r=[],l={toasts:[]};function c(e){l=((e,t)=>{switch(t.type){case"ADD_TOAST":return{...e,toasts:[t.toast,...e.toasts].slice(0,1)};case"UPDATE_TOAST":return{...e,toasts:e.toasts.map(e=>e.id===t.toast.id?{...e,...t.toast}:e)};case"DISMISS_TOAST":{let{toastId:a}=t;return a?i(a):e.toasts.forEach(e=>{i(e.id)}),{...e,toasts:e.toasts.map(e=>e.id===a||void 0===a?{...e,open:!1}:e)}}case"REMOVE_TOAST":if(void 0===t.toastId)return{...e,toasts:[]};return{...e,toasts:e.toasts.filter(e=>e.id!==t.toastId)}}})(l,e),r.forEach(e=>{e(l)})}function d(e){let{...t}=e,a=(s=(s+1)%Number.MAX_SAFE_INTEGER).toString(),n=()=>c({type:"DISMISS_TOAST",toastId:a});return c({type:"ADD_TOAST",toast:{...t,id:a,open:!0,onOpenChange:e=>{e||n()}}}),{id:a,dismiss:n,update:e=>c({type:"UPDATE_TOAST",toast:{...e,id:a}})}}function p(){let[e,t]=n.useState(l);return n.useEffect(()=>(r.push(t),()=>{let e=r.indexOf(t);e>-1&&r.splice(e,1)}),[e]),{...e,toast:d,dismiss:e=>c({type:"DISMISS_TOAST",toastId:e})}}},17037:(e,t,a)=>{"use strict";a.d(t,{F:()=>r});var n=a(95155),s=a(12115),o=a(59034),i=a(64269);let r=s.forwardRef((e,t)=>{let{className:a,children:s,...r}=e;return(0,n.jsxs)(o.bL,{ref:t,className:(0,i.cn)("relative overflow-hidden",a),...r,children:[(0,n.jsx)(o.LM,{className:"h-full w-full rounded-[inherit]",children:s}),(0,n.jsx)(l,{}),(0,n.jsx)(o.OK,{})]})});r.displayName=o.bL.displayName;let l=s.forwardRef((e,t)=>{let{className:a,orientation:s="vertical",...r}=e;return(0,n.jsx)(o.VM,{ref:t,orientation:s,className:(0,i.cn)("flex touch-none select-none transition-colors","vertical"===s&&"h-full w-2.5 border-l border-l-transparent p-[1px]","horizontal"===s&&"h-2.5 flex-col border-t border-t-transparent p-[1px]",a),...r,children:(0,n.jsx)(o.lr,{className:"relative flex-1 rounded-full bg-border"})})});l.displayName=o.VM.displayName},18332:(e,t,a)=>{"use strict";a.d(t,{Fc:()=>l,TN:()=>d,XL:()=>c});var n=a(95155),s=a(12115),o=a(83101),i=a(64269);let r=(0,o.F)("relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground",{variants:{variant:{default:"bg-background text-foreground",destructive:"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive"}},defaultVariants:{variant:"default"}}),l=s.forwardRef((e,t)=>{let{className:a,variant:s,...o}=e;return(0,n.jsx)("div",{ref:t,role:"alert",className:(0,i.cn)(r({variant:s}),a),...o})});l.displayName="Alert";let c=s.forwardRef((e,t)=>{let{className:a,...s}=e;return(0,n.jsx)("h5",{ref:t,className:(0,i.cn)("mb-1 font-medium leading-none tracking-tight",a),...s})});c.displayName="AlertTitle";let d=s.forwardRef((e,t)=>{let{className:a,...s}=e;return(0,n.jsx)("div",{ref:t,className:(0,i.cn)("text-sm [&_p]:leading-relaxed",a),...s})});d.displayName="AlertDescription"},28762:(e,t,a)=>{"use strict";a.r(t),a.d(t,{default:()=>x});var n=a(95155),s=a(12115),o=a(36950),i=a(3998),r=a(86948),l=a(5418),c=a(81288),d=a(5225),p=a(60406),u=a(18332),h=a(15894),f=a(31120),m=a(17037),g=a(80158);let b='# \uD83D\uDD01 AI_TeleSuite: Master Replication Orchestrator Prompt (v1.1)\n\nYou are **AI_Master_Replicator**. Your sole task is to create a **100% exact, production-ready clone** of the AI_TeleSuite application by executing the complete specification detailed below. This document is self-contained and provides all necessary information, from initial setup to the line-by-line implementation of every feature.\n\n---\n## ⚙️ Replication Process\n\n1.  **Start with this file** (`REPLICATION_PROMPT.md`) as the master instruction set.\n2.  **Process each section sequentially**, from `Part 1: Core Technology & Configuration` through `Part 8: Verification Checklist`.\n3.  For each section, generate the **exact files and code** as specified. Do not summarize, omit, or add anything.\n4.  After processing all parts, run the **Verification Checklist** to ensure a perfect clone.\n\n---\n## **Part 1: Core Technology & Configuration**\n\nThis section outlines the fundamental technology stack, project configuration files, and environment setup required for the AI_TeleSuite application.\n\n### **1.1. Core Technology Stack**\n\n*   **Framework:** Next.js (v15.x or latest stable) using the App Router.\n*   **Language:** TypeScript.\n*   **UI Library:** React (v18.x) with ShadCN UI components. All components are pre-built and available under `@/components/ui`.\n*   **Styling:** Tailwind CSS. The specific theme and colors are defined in `src/app/globals.css`.\n*   **AI Backend & Orchestration:** Genkit (v1.x) using `@genkit-ai/googleai`. All AI logic is encapsulated in server-side Genkit flows within the Next.js application.\n*   **AI Models:** Google\'s Gemini models, specifically `gemini-2.0-flash` for most tasks and `gemini-1.5-flash` for more complex reasoning or larger context windows.\n*   **Client-Side State Management:** React Hooks (`useState`, `useEffect`, `useMemo`, `useCallback`). Custom hooks are used for managing `localStorage`.\n*   **Text-to-Speech (TTS):** A **client-side utility** (`/src/lib/tts-client.ts`) that directly calls the Google Cloud Text-to-Speech REST API. The API key must be exposed to the client as `NEXT_PUBLIC_GOOGLE_API_KEY`.\n*   **Speech-to-Text (ASR):** Browser\'s native `window.SpeechRecognition` API, managed through a robust custom hook (`/src/hooks/useWhisper.ts`).\n\n### **1.2. Core Project Files & Configuration**\n\n*   **`package.json`**:\n    ```json\n    {\n      "name": "ai-telesuite-replication",\n      "version": "0.1.1",\n      "private": true,\n      "scripts": { "dev": "next dev", "build": "next build", "start": "NODE_ENV=production next start -p 9003", "lint": "next lint", "typecheck": "tsc --noEmit" },\n      "dependencies": {\n        "@hookform/resolvers": "^4.1.3",\n        "@radix-ui/react-accordion": "^1.2.3",\n        "@radix-ui/react-alert-dialog": "^1.1.6",\n        "@radix-ui/react-avatar": "^1.1.3",\n        "@radix-ui/react-checkbox": "^1.1.4",\n        "@radix-ui/react-dialog": "^1.1.6",\n        "@radix-ui/react-dropdown-menu": "^2.1.6",\n        "@radix-ui/react-label": "^2.1.2",\n        "@radix-ui/react-menubar": "^1.1.6",\n        "@radix-ui/react-popover": "^1.1.6",\n        "@radix-ui/react-progress": "^1.1.2",\n        "@radix-ui/react-radio-group": "^1.2.3",\n        "@radix-ui/react-scroll-area": "^1.2.3",\n        "@radix-ui/react-select": "^2.1.6",\n        "@radix-ui/react-separator": "^1.1.2",\n        "@radix-ui/react-slider": "^1.2.3",\n        "@radix-ui/react-slot": "^1.1.2",\n        "@radix-ui/react-switch": "^1.1.3",\n        "@radix-ui/react-tabs": "^1.1.3",\n        "@radix-ui/react-toast": "^1.2.6",\n        "@radix-ui/react-tooltip": "^1.1.8",\n        "@tanstack/react-query": "^5.66.0",\n        "class-variance-authority": "^0.7.1",\n        "clsx": "^2.1.1",\n        "cmdk": "^1.0.0",\n        "date-fns": "^3.6.0",\n        "docx-preview": "^0.3.2",\n        "geist": "^1.3.0",\n        "jspdf": "^2.5.1",\n        "jspdf-autotable": "^3.8.0",\n        "jszip": "^3.10.1",\n        "lucide-react": "^0.475.0",\n        "next": "15.2.3",\n        "react": "^18.3.1",\n        "react-day-picker": "^8.10.1",\n        "react-dom": "^18.3.1",\n        "react-hook-form": "^7.54.2",\n        "recharts": "^2.15.1",\n        "tailwind-merge": "^3.0.1",\n        "tailwindcss-animate": "^1.0.7",\n        "xlsx": "^0.18.5",\n        "zod": "^3.24.2",\n        "genkit": "^1.0.0",\n        "@genkit-ai/googleai": "^1.0.0",\n        "@genkit-ai/next": "^1.0.0",\n        "genkit-cli": "^1.0.0",\n        "wav": "^1.0.2"\n      },\n      "devDependencies": {\n        "@types/node": "^20",\n        "@types/react": "^18",\n        "@types/react-dom": "^18",\n        "autoprefixer": "^10.4.17",\n        "postcss": "^8",\n        "raw-loader": "^4.0.2",\n        "tailwindcss": "^3.4.1",\n        "typescript": "^5"\n      }\n    }\n    ```\n*   **`n8n_workflow.json`**:\n    ```json\n    {\n      "name": "AI_TeleSuite_Workflow",\n      "nodes": [\n        {\n          "parameters": {},\n          "id": "startNode",\n          "name": "Start",\n          "type": "n8n-nodes-base.start",\n          "typeVersion": 1,\n          "position": [\n            250,\n            300\n          ]\n        }\n      ],\n      "connections": {},\n      "active": false,\n      "settings": {},\n      "id": "ai-telesuite-workflow"\n    }\n    ```\n*   **`tailwind.config.ts`**: Standard configuration for a ShadCN UI project.\n*   **`src/app/globals.css`**: Defines the application\'s color scheme using CSS variables. (Refer to file content)\n*   **Environment Variables (`.env`)**: **CRITICAL STEP.** Requires a Google API key with Gemini and Text-to-Speech APIs enabled. The key must be duplicated and prefixed with `NEXT_PUBLIC_` for client-side TTS access. Create a `.env` file in the root of the project with the following content:\n    ```\n    GOOGLE_API_KEY=AIzaSyCDNGYop9lEU0B3SsiujrX4w1pEa1rxwos\n    NEXT_PUBLIC_GOOGLE_API_KEY=AIzaSyCDNGYop9lEU0B3SsiujrX4w1pEa1rxwos\n    ```\n*   **`next.config.js`**: Includes webpack configuration to handle `.md` files and provides a shim for `async_hooks` on the client side.\n\n---\n## **Part 2: Global Styles & Layout**\n\nThis section contains the full code for global styles (`globals.css`), the root `layout.tsx`, the main authenticated layout, and the core layout components responsible for the application\'s shell, including the sidebar and page header.\n\n### **2.1. Global Styles**\n\n*(The content for `globals.css` and `transcript.css` should be implemented as specified in the context.)*\n\n### **2.2. Root Layout & Main Application Layout**\n\n*(The content for `src/app/layout.tsx` and `src/app/(main)/layout.tsx` should be implemented as specified in the context.)*\n\n### **2.3. Core Layout Components**\n\n*(The content for `src/components/layout/app-sidebar.tsx` and `src/components/layout/page-header.tsx` should be implemented as specified in the context.)*\n\n---\n## **Part 3: Custom Hooks & State Management**\n\nThis section provides the complete implementation of all custom React hooks used for managing client-side state, including `localStorage` interactions for products, knowledge base, and user activity.\n\n*(The full code for `use-local-storage.ts`, `use-mobile.ts`, `use-toast.ts`, `use-activity-logger.ts`, `use-product-context.tsx`, `use-knowledge-base.ts`, and `use-whisper.ts` should be implemented as specified.)*\n\n---\n## **Part 4: Library Utilities**\n\nThis section details the utility functions for tasks like file conversion, data export (CSV, PDF, DOC), and client-side TTS API calls.\n\n*(The full code for `lib/utils.ts`, `lib/file-utils.ts`, `lib/export.ts`, `lib/pdf-utils.ts`, and `lib/tts-client.ts` should be implemented.)*\n\n---\n## **Part 5: Feature Pages & UI Components**\n\nThis is the feature-by-feature implementation guide for every page in the application, ordered exactly as they appear in the sidebar.\n\n### **Home (`/home`)**\n- **Purpose:** A central dashboard providing an at-a-glance overview of all application modules.\n- **Implementation:** `src/app/(main)/home/page.tsx`. Uses a series of "Feature Widgets" (`<Card>` components).\n- **Data:** Each widget\'s data is dynamically calculated on the client-side using hooks (`useActivityLogger`, `useKnowledgeBase`, `useProductContext`) to show statistics and last activity.\n\n### **Products (`/products`)**\n- **Purpose:** Manage the product catalog used across the application for contextual AI generation.\n- **Files:** `src/app/(main)/products/page.tsx`, `src/components/features/products/product-dialog-fields.tsx`.\n- **State Management:** `src/hooks/useProductContext.tsx`.\n- **Logic:** Manages an array of `ProductObject` items in `localStorage`. UI allows adding, editing, and deleting products. A "Generate with AI" button calls the `generateProductDescription` Genkit flow.\n\n### **Knowledge Base (`/knowledge-base`)**\n- **Purpose:** Central repository for all contextual documents and text snippets.\n- **Files:** `src/app/(main)/knowledge-base/page.tsx`, `src/components/features/knowledge-base/knowledge-base-form.tsx`, `src/components/features/knowledge-base/knowledge-base-table.tsx`.\n- **State Management:** `src/hooks/use-knowledge-base.ts`.\n- **Logic:** Manages `KnowledgeFile` objects in `localStorage`. Form allows adding entries via file upload or text. Table lists entries with view/delete actions. View dialog renders previews using `docx-preview` and native browser elements.\n\n---\n### **GROUP: Sales & Support Tools**\n\n#### **AI Pitch Generator (`/pitch-generator`)**\n- **Purpose:** Generates structured, high-quality sales pitches.\n- **Files:** `src/app/(main)/pitch-generator/page.tsx`, `src/components/features/pitch-generator/pitch-form.tsx`, `src/components/features/pitch-generator/pitch-card.tsx`.\n- **Backend Flow:** `src/ai/flows/pitch-generator.ts`.\n- **Logic:** The frontend gathers KB context for the selected product and calls the `generatePitch` flow. The AI is prompted to act as a "world-class sales agent," using specific KB categories for different parts of the pitch. The structured `GeneratePitchOutput` is rendered in the `PitchCard`.\n\n#### **AI Rebuttal Assistant (`/rebuttal-generator`)**\n- **Purpose:** Provides real-time rebuttals to customer objections.\n- **Files:** `src/app/(main)/rebuttal-generator/page.tsx`, `src/components/features/rebuttal-generator/rebuttal-form.tsx`, `src/components/features/rebuttal-generator/rebuttal-display.tsx`.\n- **Backend Flow:** `src/ai/flows/rebuttal-generator.ts`.\n- **Logic:** The `generateRebuttal` flow is called with the objection and KB context. The AI uses an "Acknowledge, Bridge, Benefit, Clarify/Question" (ABBC/Q) model. A non-AI fallback (`generateFallbackRebuttal`) provides resilience if the AI fails.\n\n---\n### **GROUP: Analysis & Reporting**\n\n#### **Audio Transcription & Dashboard (`/transcription`, `/transcription-dashboard`)**\n- **Purpose:** Transcribes audio files and provides a dashboard to review historical transcriptions.\n- **Files:** `src/app/(main)/transcription/page.tsx`, `src/app/(main)/transcription-dashboard/page.tsx`.\n- **Backend Flow:** `src/ai/flows/transcription-flow.ts`.\n- **Logic:** On the `/transcription` page, the user uploads audio files. The `transcribeAudio` flow uses a dual-model fallback (fast model first, then powerful model on failure) for resilience. Results are logged and displayed on the `/transcription-dashboard` page.\n\n#### **AI Call Scoring & Dashboard (`/call-scoring`, `/call-scoring-dashboard`)**\n- **Purpose:** Analyzes call transcripts against a detailed rubric.\n- **Files:** `src/app/(main)/call-scoring/page.tsx`, `src/app/(main)/call-scoring-dashboard/page.tsx`.\n- **Backend Flow:** `src/ai/flows/call-scoring.ts`.\n- **Logic:** A two-step process: first `transcribeAudio`, then `scoreCall`. The scoring prompt is extremely detailed, with a 75+ metric rubric. It also uses a dual-model fallback for resilience. The `/call-scoring-dashboard` displays logs from both manual scoring and voice agent calls.\n\n#### **Combined Call Analysis & Dashboard (`/combined-call-analysis`, `/combined-call-analysis-dashboard`)**\n- **Purpose:** Aggregates multiple call scoring reports to identify trends.\n- **Files:** `src/app/(main)/combined-call-analysis/page.tsx`, `src/app/(main)/combined-call-analysis-dashboard/page.tsx`.\n- **Backend Flow:** `src/ai/flows/combined-call-scoring-analysis.ts`.\n- **Logic:** The user selects historical scored calls for a product. The `analyzeCallBatch` flow synthesizes the reports. A button on the results card can then call `generateOptimizedPitches` to create data-driven sales scripts based on the analysis.\n\n---\n### **GROUP: Voice Agents**\n\n#### **AI Voice Sales & Support Agents (`/voice-sales-agent`, `/voice-support-agent`)**\n- **Purpose:** Orchestrates a full, simulated voice-to-voice conversation.\n- **Files:** `src/app/(main)/voice-sales-agent/page.tsx`, `src/app/(main)/voice-support-agent/page.tsx`.\n- **Backend Flows:** `.../voice-sales-agent-flow.ts`, `.../voice-support-agent-flow.ts`.\n- **Logic & Reliability Mandates:**\n    - A robust frontend state machine (`CONFIGURING`, `LISTENING`, `PROCESSING`, `AI_SPEAKING`, `ENDED`).\n    - **Barge-in:** `useWhisper` hook\'s interim results (`onTranscribe`) immediately stop any ongoing TTS playback.\n    - **Turn-taking vs. Inactivity:** Implemented as two distinct mechanisms. A short `silenceTimeout` triggers the agent\'s next turn, while a longer `inactivityTimeout` triggers a reminder if no speech is detected at all.\n    - **Sales Agent Routing:** Uses a fast "router" prompt to classify user intent, then calls smaller, specialized prompts to generate responses quickly.\n    - **Post-Call:** Automatically constructs the full transcript and triggers the `scoreCall` flow.\n\n#### **Voice Agent Dashboards (`/voice-sales-dashboard`, `/voice-support-dashboard`)**\n- **Purpose:** To review logs and recordings of all past voice agent interactions.\n- **Files:** `.../voice-sales-dashboard/page.tsx`, `.../voice-support-dashboard/page.tsx`.\n- **Logic:** Reads activity logs for voice agent modules and displays them in a table. The "View Report" dialog shows the full transcript, audio player, and final call score.\n\n---\n### **GROUP: Content & Data Tools**\n\n#### **Training Material Creator & Dashboard (`/create-training-deck`, `/training-material-dashboard`)**\n- **Purpose:** Generates structured text content for training materials.\n- **Files:** `src/app/(main)/create-training-deck/page.tsx`, `src/app/(main)/training-material-dashboard/page.tsx`.\n- **Backend Flow:** `src/ai/flows/training-deck-generator.ts`.\n- **Logic:** User provides context (prompt, file upload, or KB selection). The flow has special-cased frameworks for "ET Prime Sales Deck" and "Telesales Data Analysis Framework" that it uses if the user\'s request matches; otherwise, it performs a general synthesis.\n\n#### **AI Data Analyst & Dashboard (`/data-analysis`, `/data-analysis-dashboard`)**\n- **Purpose:** Simulates a data analyst to provide insights from user-described data files.\n- **Files:** `src/app/(main)/data-analysis/page.tsx`, `src/app/(main)/data-analysis-dashboard/page.tsx`.\n- **Backend Flow:** `src/ai/flows/data-analyzer.ts`.\n- **Logic:** Works based on **simulation**. The user provides a very detailed `userAnalysisPrompt` describing the files and their goals. The AI simulates data cleaning and analysis based *only* on this textual description and outputs a report with a clear disclaimer.\n\n#### **Batch Audio Downloader (`/batch-audio-downloader`)**\n- **Purpose:** Downloads multiple audio files from URLs and bundles them into a ZIP.\n- **Files:** `src/app/(main)/batch-audio-downloader/page.tsx`.\n- **Logic:** This is a purely **client-side** utility using `jszip` and `xlsx`. It parses URLs from text or an Excel file, fetches each audio file, and creates a downloadable ZIP archive. Includes a prominent warning about server CORS policies.\n\n---\n### **GROUP: System**\n\n#### **Global Activity Log (`/activity-dashboard`)**\n- **Purpose:** A master log of every significant user action.\n- **Files:** `src/app/(main)/activity-dashboard/page.tsx`, `src/components/features/activity-dashboard/activity-table.tsx`, `src/components/features/activity-dashboard/filters.tsx`.\n- **State Management:** `src/hooks/use-activity-logger.ts`.\n- **Logic:** Manages `ActivityLogEntry` objects in `localStorage`. The page provides filters and renders logs in a table. The "View Details" dialog displays a rich, formatted view of the logged data.\n\n#### **Clone Full App (`/clone-app`)**\n- **Purpose:** Provides the full source code and this replication prompt.\n- **Files:** `src/app/(main)/clone-app/page.tsx`.\n- **Backend API Routes:** `src/app/api/clone-app/route.ts` and `src/app/api/clone-docs/route.ts`.\n- **Logic:** Provides two main actions: "Download Project ZIP" which calls the backend to package all source files, and a viewer to display the content of this master replication prompt, fetched from the `clone-docs` API.\n\n#### **n8n Workflow (`/n8n-workflow`)**\n- **Purpose:** Provides a downloadable JSON file for n8n workflow automation.\n- **Files:** `src/app/(main)/n8n-workflow/page.tsx`.\n- **Backend API Route:** `src/app/api/n8n-workflow/route.ts`.\n- **Logic:** The frontend provides a button that links to the API route, which dynamically generates and serves a valid n8n workflow JSON file containing the project structure.\n\n---\n## **Part 6: AI Flows & Backend Logic**\n\nThis section contains the full specification for every Genkit AI flow, including all prompts, Zod schemas, and fallback logic.\n\n*(The full, detailed specification for each AI flow file (`pitch-generator.ts`, `rebuttal-generator.ts`, `call-scoring.ts`, `transcription-flow.ts`, etc.) should be implemented here.)*\n\n---\n## **Part 7: API Routes**\n\nThis section specifies the implementation for all Next.js API routes.\n\n*(The full code for `api/clone-app/route.ts`, `api/clone-docs/route.ts`, and `api/n8n-workflow/route.ts` should be implemented here.)*\n\n---\n## **Part 8: Verification Checklist (Self-Audit Phase)**\nAfter processing all parts, run this strict checklist. For each item, output → **PASS | FAIL** + Evidence. If FAIL → provide RCA (root cause) + auto-generate corrected code.\n\n1.  **Menu Bar Features** → All tools present and functional as per the specification?\n2.  **Knowledge Base & Local Data** → All default products, KB entries, and `localStorage` hooks implemented exactly?\n3.  **AI Flows** → All Genkit flows implemented with correct schemas, prompts, and fallback logic?\n4.  **Voice Agent** → Turn-taking, barge-in, silence/inactivity detection, and TTS/ASR logic fully functional?\n5.  **Dashboards & Exports** → All dashboards display correct data and all Excel/PDF/DOC exports are working?\n6.  **Configs & Components** → `tailwind.config.ts`, `globals.css`, and all ShadCN components correctly configured?\n7.  **Environment** → Instructions for `.env` file with `GOOGLE_API_KEY` and `NEXT_PUBLIC_GOOGLE_API_KEY` are clear and implemented?\n8.  **API Routes** → `/api/clone-app`, `/api/clone-docs`, and `/api/n8n-workflow` are fully implemented and functional?\n\nStop only when **all items are PASS**.\n\n---\n## ⚠️ Final Directives\n- **No hallucination. No summarization. No stubs.**\n- Must output every single line of code as derived from the application context.\n- Must replicate the entire application state, including the default KB and product catalog.\n- The final deliverable must be a **100% identical, deployable app** (Vercel/Firebase ready).\n';function x(){let[e,t]=(0,s.useState)(!0),[a,x]=(0,s.useState)(""),[y,w]=(0,s.useState)(null),{toast:v}=(0,h.dj)();return(0,s.useEffect)(()=>{b?x(b):w("Failed to load the master replication prompt content."),t(!1)},[]),(0,n.jsxs)("div",{className:"flex flex-col h-full",children:[(0,n.jsx)(o.z,{title:"Replication Prompt Generator"}),(0,n.jsxs)("main",{className:"flex-1 overflow-y-auto p-4 md:p-6 flex flex-col items-center space-y-6",children:[(0,n.jsxs)(r.Zp,{className:"w-full max-w-4xl",children:[(0,n.jsxs)(r.aR,{children:[(0,n.jsxs)(r.ZB,{className:"text-xl flex items-center",children:[(0,n.jsx)(l.A,{className:"mr-3 h-6 w-6 text-primary"}),"Master Replication Prompt"]}),(0,n.jsx)(r.BT,{children:"Use this comprehensive prompt to have an AI agent like Google's Gemini in AI Studio replicate this application from scratch. It contains the full specification for every feature."})]}),(0,n.jsx)(r.Wu,{children:(0,n.jsx)(m.F,{className:"h-96 border rounded-md bg-muted/30",children:(0,n.jsx)(f.T,{readOnly:!0,value:e?"Loading master prompt...":y||a,className:"h-full min-h-[384px] w-full text-xs p-3 font-mono resize-none border-0 focus-visible:ring-0"})})}),(0,n.jsxs)(r.wL,{className:"flex justify-end gap-2",children:[(0,n.jsxs)(i.$,{variant:"outline",onClick:()=>{a&&navigator.clipboard.writeText(a).then(()=>v({title:"Prompt Copied!",description:"The master replication prompt has been copied to your clipboard."})).catch(()=>v({variant:"destructive",title:"Copy Failed",description:"Could not copy the prompt."}))},disabled:e||!!y,children:[(0,n.jsx)(c.A,{className:"mr-2 h-4 w-4"})," Copy Prompt"]}),(0,n.jsxs)(i.$,{onClick:()=>(0,g.U3)("AI_TeleSuite_Master_Replication_Prompt.txt",a),disabled:e||!!y,children:[(0,n.jsx)(d.A,{className:"mr-2 h-4 w-4"})," Download Prompt (.txt)"]})]})]}),y&&(0,n.jsxs)(u.Fc,{variant:"destructive",className:"mt-4 w-full max-w-4xl",children:[(0,n.jsx)(p.A,{className:"h-4 w-4"}),(0,n.jsx)(u.XL,{children:"Error"}),(0,n.jsx)(u.TN,{children:y})]})]})]})}},30464:(e,t,a)=>{Promise.resolve().then(a.bind(a,28762))},31120:(e,t,a)=>{"use strict";a.d(t,{T:()=>i});var n=a(95155),s=a(12115),o=a(64269);let i=s.forwardRef((e,t)=>{let{className:a,...s}=e;return(0,n.jsx)("textarea",{className:(0,o.cn)("flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",a),ref:t,...s})});i.displayName="Textarea"},36950:(e,t,a)=>{"use strict";a.d(t,{z:()=>c});var n=a(95155),s=a(12410),o=a(64269);function i(e){let{text:t,className:a,...s}=e;return(0,n.jsx)("h1",{className:(0,o.cn)("text-lg font-semibold md:text-xl text-foreground",a),...s,children:t})}var r=a(44385),l=a(44622);function c(e){let{title:t}=e,a=(0,r.a)();return(0,n.jsxs)("header",{className:"sticky top-0 z-30 flex h-16 items-center gap-4 border-b bg-background/80 backdrop-blur-sm px-4 md:px-6",children:[a&&(0,n.jsxs)(s.x2,{variant:"ghost",size:"icon",className:"md:hidden -ml-2",children:[(0,n.jsx)(l.A,{className:"h-5 w-5"}),(0,n.jsx)("span",{className:"sr-only",children:"Toggle Sidebar"})]}),(0,n.jsx)(i,{text:t,className:"flex-1"})]})}},60406:(e,t,a)=>{"use strict";a.d(t,{A:()=>n});let n=(0,a(14294).A)("TriangleAlert",[["path",{d:"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3",key:"wmoenq"}],["path",{d:"M12 9v4",key:"juzpu7"}],["path",{d:"M12 17h.01",key:"p32p05"}]])},80158:(e,t,a)=>{"use strict";function n(e,t){if(!t||!t.length)return;let a=Object.keys(t[0]),n=new Blob([a.join(",")+"\n"+t.map(e=>a.map(t=>{let a=null===e[t]||void 0===e[t]?"":e[t];return(a=a instanceof Date?a.toLocaleString():a.toString().replace(/"/g,'""')).search(/("|,|\n)/g)>=0&&(a='"'.concat(a,'"')),a}).join(",")).join("\n")],{type:"text/csv;charset=utf-8;"}),s=document.createElement("a");if(void 0!==s.download){let t=URL.createObjectURL(n);s.setAttribute("href",t),s.setAttribute("download",e),s.style.visibility="hidden",document.body.appendChild(s),s.click(),document.body.removeChild(s),URL.revokeObjectURL(t)}}function s(e,t){let a=new Blob([t],{type:e.endsWith(".doc")?"application/msword":"text/plain;charset=utf-8;"}),n=document.createElement("a");if(void 0!==n.download){let t=URL.createObjectURL(a);n.setAttribute("href",t),n.setAttribute("download",e),n.style.visibility="hidden",document.body.appendChild(n),n.click(),document.body.removeChild(n),URL.revokeObjectURL(t)}}async function o(e,t){if(!e)return void console.error("No audio reference provided, cannot download.");let a=null;if(e.startsWith("data:")){if(!(a=function(e){if(!e||!e.includes(","))return null;try{let t=atob(e.split(",")[1]),a=e.split(",")[0].split(":")[1].split(";")[0],n=new ArrayBuffer(t.length),s=new Uint8Array(n);for(let e=0;e<t.length;e++)s[e]=t.charCodeAt(e);return new Blob([n],{type:a})}catch(e){return console.error("Error converting data URI to Blob:",e),null}}(e)))return void console.error("Failed to convert Data URI to Blob for download.")}else try{let t=await fetch(e);if(!t.ok)throw Error("Failed to fetch audio asset (".concat(t.status,")"));a=await t.blob()}catch(e){console.error("Unable to download remote audio asset:",e);return}let n=document.createElement("a");if(void 0!==n.download&&a){let e=URL.createObjectURL(a);n.setAttribute("href",e),n.setAttribute("download",t),n.style.visibility="hidden",document.body.appendChild(n),n.click(),document.body.removeChild(n),URL.revokeObjectURL(e)}}function i(e,t,a){let n=function(e,t,a){let n="",s=e.map((e,a)=>{let n=e.length;return t.forEach(e=>{let t=String(null===e[a]||void 0===e[a]?"":e[a]);t.length>n&&(n=t.length)}),n}),o=e.map((e,t)=>e.padEnd(s[t])).join(" | ");return n+=o+"\n"+e.map((e,t)=>"-".repeat(s[t])).join("-+-")+"\n",t.forEach(e=>{let t=e.map((e,t)=>String(null==e?"":e).padEnd(s[t])).join(" | ");n+=t+"\n"}),n}(t,a);s(e.endsWith(".doc")?e:"".concat(e,".doc"),n)}async function r(e,t,n){let{jsPDF:s}=await Promise.all([a.e(3930),a.e(5033),a.e(6241)]).then(a.bind(a,55172)),{default:o}=await a.e(6941).then(a.bind(a,36941)),i=new s({orientation:"landscape"});o(i,{head:[t],body:n,styles:{fontSize:8},headStyles:{fillColor:[41,128,185]},margin:{top:20},didDrawPage:function(e){i.setFontSize(16),i.text("Exported Table Data",e.settings.margin.left,15)}}),i.save(e.endsWith(".pdf")?e:"".concat(e,".pdf"))}a.d(t,{U3:()=>s,e3:()=>r,mf:()=>i,vG:()=>o,yR:()=>n})},81288:(e,t,a)=>{"use strict";a.d(t,{A:()=>n});let n=(0,a(14294).A)("Copy",[["rect",{width:"14",height:"14",x:"8",y:"8",rx:"2",ry:"2",key:"17jyea"}],["path",{d:"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2",key:"zix9uf"}]])},86948:(e,t,a)=>{"use strict";a.d(t,{BT:()=>c,Wu:()=>d,ZB:()=>l,Zp:()=>i,aR:()=>r,wL:()=>p});var n=a(95155),s=a(12115),o=a(64269);let i=s.forwardRef((e,t)=>{let{className:a,...s}=e;return(0,n.jsx)("div",{ref:t,className:(0,o.cn)("rounded-lg border bg-card text-card-foreground shadow-sm",a),...s})});i.displayName="Card";let r=s.forwardRef((e,t)=>{let{className:a,...s}=e;return(0,n.jsx)("div",{ref:t,className:(0,o.cn)("flex flex-col space-y-1.5 p-6",a),...s})});r.displayName="CardHeader";let l=s.forwardRef((e,t)=>{let{className:a,...s}=e;return(0,n.jsx)("h3",{ref:t,className:(0,o.cn)("text-2xl font-semibold leading-none tracking-tight",a),...s})});l.displayName="CardTitle";let c=s.forwardRef((e,t)=>{let{className:a,...s}=e;return(0,n.jsx)("p",{ref:t,className:(0,o.cn)("text-sm text-muted-foreground",a),...s})});c.displayName="CardDescription";let d=s.forwardRef((e,t)=>{let{className:a,...s}=e;return(0,n.jsx)("div",{ref:t,className:(0,o.cn)("p-6 pt-0",a),...s})});d.displayName="CardContent";let p=s.forwardRef((e,t)=>{let{className:a,...s}=e;return(0,n.jsx)("div",{ref:t,className:(0,o.cn)("flex items-center p-6 pt-0",a),...s})});p.displayName="CardFooter"}},e=>{e.O(0,[4909,6077,6107,2410,8441,1255,7358],()=>e(e.s=30464)),_N_E=e.O()}]);