// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/activity-dashboard" | "/batch-audio-downloader" | "/call-scoring" | "/call-scoring-dashboard" | "/clone-app" | "/combined-call-analysis" | "/combined-call-analysis-dashboard" | "/create-training-deck" | "/data-analysis" | "/data-analysis-dashboard" | "/home" | "/knowledge-base" | "/knowledge-base-dashboard" | "/login" | "/n8n-workflow" | "/pitch-generator" | "/products" | "/rebuttal-generator" | "/replication-generator" | "/sales-tools/pitch-generator" | "/sales-tools/rebuttal-assistant" | "/training-material-dashboard" | "/transcription" | "/transcription-dashboard" | "/voice-sales-agent" | "/voice-sales-dashboard" | "/voice-support-agent" | "/voice-support-dashboard"
type AppRouteHandlerRoutes = "/api/clone-app" | "/api/clone-docs" | "/api/diagnose" | "/api/n8n-workflow" | "/api/transcription" | "/api/tts"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/activity-dashboard": {}
  "/api/clone-app": {}
  "/api/clone-docs": {}
  "/api/diagnose": {}
  "/api/n8n-workflow": {}
  "/api/transcription": {}
  "/api/tts": {}
  "/batch-audio-downloader": {}
  "/call-scoring": {}
  "/call-scoring-dashboard": {}
  "/clone-app": {}
  "/combined-call-analysis": {}
  "/combined-call-analysis-dashboard": {}
  "/create-training-deck": {}
  "/data-analysis": {}
  "/data-analysis-dashboard": {}
  "/home": {}
  "/knowledge-base": {}
  "/knowledge-base-dashboard": {}
  "/login": {}
  "/n8n-workflow": {}
  "/pitch-generator": {}
  "/products": {}
  "/rebuttal-generator": {}
  "/replication-generator": {}
  "/sales-tools/pitch-generator": {}
  "/sales-tools/rebuttal-assistant": {}
  "/training-material-dashboard": {}
  "/transcription": {}
  "/transcription-dashboard": {}
  "/voice-sales-agent": {}
  "/voice-sales-dashboard": {}
  "/voice-support-agent": {}
  "/voice-support-dashboard": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
